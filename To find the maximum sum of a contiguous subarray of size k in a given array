public class MaxSumSubarrayOfK {
    public static int maxSum(int[] arr, int k) {
        if (arr.length < k) {
            throw new IllegalArgumentException("Array length must be at least " + k);
        }

        // Calculate the sum of the first 'k' elements
        int maxSum = 0;
        for (int i = 0; i < k; i++) {
            maxSum += arr[i];
        }

        // Initialize the current sum to the max sum
        int currentSum = maxSum;

        // Slide the window from the start of the array to the end
        for (int i = k; i < arr.length; i++) {
            // Update the current sum by removing the element going out of the window
            // and adding the new element coming into the window
            currentSum += arr[i] - arr[i - k];

            // Update maxSum if currentSum is greater
            maxSum = Math.max(maxSum, currentSum);
        }

        return maxSum;
    }

    public static void main(String[] args) {
        int[] arr = {2, 1, 5, 1, 3, 2};
        int k = 3;
        int result = maxSum(arr, k);
        System.out.println("Maximum sum of a contiguous subarray of size " + k + " is: " + result);
    }
}
